/*! gridss: a CSS Grid microlib */

.gridss {
  display: grid;
  grid-gap: 1rem;
  grid-template-columns: repeat(12, 1fr);
}

.with-gap { margin-bottom: 1rem; }
.subgrid { display: subgrid; }

.align-i-stretch { align-items: start; }
.align-i-end { align-items: end; }
.align-i-start { align-items: start; }
.align-i-center { align-items: center; }

.justify-i-stretch { justify-items: start; }
.justify-i-end { justify-items: end; }
.justify-i-start { justify-items: start; }
.justify-i-center { justify-items: center; }

[class*='col-'] {
  width: 100%;
  display: grid;
}

/*
    Columns with a span
    eg .col-3
*/
@for $i from 1 to 12 {
  .col-$(i) {
    grid-column: span $(i);
  }
}

/*
    Columns with start and end
    eg .col-3-8
*/
@for $i from 1 to 13 {
  @for $j from 1 to 13 {
    .col-$(i)-$(j) {
      grid-column-start: $(i);
      grid-column-end: $(j);
    }
  }
}

/*
    Columns with start and end and a size
    eg .col-l-3-8
*/
@define-mixin columns $media, $size, $name {
  @media ($media) {
    @for $i from 1 to 13 {

      .col-$(size)-$(i) {
        grid-column: span $i;
      }

      .col-$(size)-$(i)  {
        display: grid;
        grid-column: span $i;
      }

      @for $j from 1 to 13 {
        .col-$(size)-$(i)-$(j) {
          grid-column-start: $(i);
          grid-column-end: $(j);
        }
      }
    }
  }
}

@mixin columns width >= 600px, s {}
@mixin columns width >= 840px, m {}
@mixin columns width >= 960px, l {}
@mixin columns width >= 1280px, xl {}